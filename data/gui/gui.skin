# -----------------------------------------------------------------
# GUI Configuration File

# lexgui: Skinnable GUI Routines for the allegro game library
# Version 0.9.1
# Written by Lennart Steinke (http://www.steinke.net)
# Latest version can be found here: http://www.steinke.net/allegro/

# A fair bit of functionality added by Craig Harrison.
# It obviously hasn't been worked on in a while and used a
# lot of depreciated Allegro functions.
# -----------------------------------------------------------------

[button]
# For image files for the different states of the button
# are needed.
# All buttons images must have the same size

# The "normal" button. 
image_norm=./data/gui/skin/button1.tga

# The way it should look "on mouseover"
image_hilite=./data/gui/skin/buttonhi.tga

# The image for the depressed button
image_pressed=./data/gui/skin/buttonpress.tga

# And finally an image for the diabled button
image_disabled=./data/gui/skin/button_disabled.tga

# A grid splitting the images in four sections
# the gridx specifies the vertical boundaries, the
# gridy contains the horizontal boundaries.
#
# Hope you have non-proportional on:
# 
# !-----!-----------------!-----!
# !  0  !        1        !  2  !
# !-----!-----------------!-----!
# !  3  !        4        !  5  !
# !-----!-----------------!-----!
# !  6  !        7        !  8  !
# !-----!-----------------!-----!
#
# Sections 0,2,6 and 8 will remain as is. 1,3,4,5 and 7 will be
# stretched to fit the size of the widget
gridx=0 3 6 9
gridy=0 3 19 22

# The colors for the text on the button as RGB values between 0 and 255 
textcol_norm=0 0 0
textcol_hilite=0 0 0
textcol_pressed=0 0 0
textcol_disabled= 128 128 128

[slider]
# The slider has actually 4 areas:
# - a vertical slider background (slider_h),
# - a horizontal slider background (slider_v),
# - a vertical handle (handle_v)
# - a horizontal handle (handle_h)
image=./data/gui/skin/slider.tga

# A background is defined by the rectangle
# defining its image (x,y,w,h)
slider_h=1 1 13 4
# and two offset variables. These define the
# the (x) offset from the start / end of the slider bg to
# the scalable part:
#    ofs1   ofs2
# !---!------!---!
# !   !      !   !
# !---!------!---!
slider_h_ofs=3 11

# Here the same for the vertical slider:
# The rect inside the image in (x,y,w,h) notation
slider_v=1 7 4 13
# The slider offsets. This time it's the (y) offset:
#
# !--!
# !  !
# !--! ofs1
# !  !
# !  !
# !  !
# !--! ofs2
# !  !
# !--!
slider_v_ofs=1 11

# position of the vertical handle inside the image in (x,y,w,h)
handle_h=6 6 8 15 
# position of the horizontal handle inside the image in (x,y,w,h)
handle_v=15 0 15 8

[checkbox]
# The checkbox. It has only one skin image
image=./data/gui/skin/checkbox.tga

# All these positions are (x,y,w,h)
# position of the image for the box in the normal (unchecked) state 
normal=0 0 13 13
# position of the image for the box in the checked state 
checked=13 0 13 13
# position of the image for the box in the disabled state 
disabled=26 0 13 13
# position of the image for the box in the disabled and checked state 
disabled_check=39 0 13 13

# Textcolors for the text RGB format
textcol_norm =0 0 0
textcol_disabled =128 128 128

[radiobutton]
# The radio button skin is very similar to the checkbox skin...
# it has an image...
image=./data/gui/skin/radio.tga
# and contains a rect (x,y,w,h) for the normal state
normal=0 0 13 13
# a rect (x,y,w,h) for the checked state
checked=13 0 13 13
# a rect (x,y,w,h) for the disbled state
disabled=26 0 13 13
# a rect (x,y,w,h) for the disabled-checked state
disabled_check=36 0 13 13

# and two colors in RGB format
textcol_norm =0 0 0
textcol_disabled =128 128 128

[textbox]
image=./data/gui/skin/textbox.tga

# The textbox is mainly a rectangle so it uses the skinned rect format
# to define the grid used for the skin.
# Check the button remarks to see how the gridx, gridy lines work
gridx=0 3 6 9
gridy=0 3 16 19
# As you might have guessed: Textcolors in RGB format
textcol_norm =0 0 0
textcol_disabled =128 128 128

[listbox]
# image for the listbox background
# This image should contain more or less a rectangle
# This rectangle will be blitted two times:
# - For the rect of the listbox
# - For the rect of the scrollbar

image=./data/gui/skin/listbox.tga
# Check the button remarks to see how the gridx, gridy lines work
gridx=0 3 6 9
gridy=0 3 16 19

scrollbar=./data/gui/skin/scrollbar.tga
sb_gridx=0 3 14 17
sb_gridy=0 2 6 9


# image for the vertical scroll bar handle
vslider=./data/gui/skin/vscroll.tga
# a grid for the vertical scroll bar
vscroll_gridx=0 4 10 15
vscroll_gridy=0 4 10 15

# textcolors
# norm is the unselected text
textcol_norm =0 0 0
# selected is the textcolor of a selected item
textcol_selected = 255 255 255
# bg_selected is the background of a selected item
textbg_selected = 43 79 112
# the textcolor for a disabled item
textcol_disabled =128 128 128


[dialog]
# a dialog.
image=./data/gui/skin/dialog.tga
# it uses the grid method to define the dialog rect.
# the first line is the dialog title bar
gridx=0  5 158 164
gridy=0 25 44 51
#align of the title text
#0 = left
#1 = center
#2 = right
align=1
#color of the title
textcol_norm =0 0 0
bgcolor=222 222 222
